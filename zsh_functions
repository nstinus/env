#!/usr/bin/zsh

retry() {
    if [[ $# -lt 3 ]]; then
        echo "usage: retry rep t2sleep command (rep.<=0 means inf.)"
        return
    fi
    ret=0
    rep=$1
    st=$2
    shift 2
    cmd=$*
    echo "Will try $rep times, sleeping $st, the command << $cmd >>"
    res=1
    while [[ $res != 0 ]]
    do
        zsh -c "${cmd}"
        res=$?
        if [[ $res -eq 0 ]]; then
            break
        else
            echo "Fail!"
        fi
        let rep=${rep}-1
        if [[ $rep -eq 0 ]]; then
            break
        elif [[ $st -gt 0 && $rep -gt 0 || $rep -lt 0 ]]; then
            sleep $st
        fi
    done
}

triage_seq() {
    for f in $(find . -type f -name 'S*.JPG' -maxdepth 1); do
        mkdir -p sequences/${f:2:4}
        mv -v $f sequences/${f:2:4}
    done
}

run_chromium() {
    $(which chromium) -proxy-server="socks5://127.0.0.1:9050" --host-resolver-rules="MAP * 0.0.0.0 , EXCLUDE myproxy" --disk-cache-dir=$HOME/.cache.chromium $@ &
}

vpn ()
{
    case $1 in
        list)
	    sudo nordvpn list $2 | column
            ;;
        status)
            sudo nordvpn status
            ;;
        *)
	    sudo ufw disable || return 1
	    sudo nordvpn $1 ${2} || return 2
	    ifconfig | grep -q tun || return 3
	    sudo ufw enable || return 4
            ;;
    esac
}

email ()
{
    case $1 in
        sync)
            mbsync -a
            notmuch new
            ;;
        purge)
            notmuch search --format=text0 --output=files tag:deleted \
                | xargs -0 --no-run-if-empty rm -v
            ;;
        *)
            emacs -f notmuch
            ;;
    esac
}
